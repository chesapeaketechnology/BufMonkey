buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        google()
    }
}

allprojects {
    group = GROUP
    version = VERSION

    repositories {
        mavenCentral()
        google()
        jcenter()
    }
}

subprojects {
    apply plugin: 'signing'
    apply plugin: 'maven'

    plugins.withId("maven-publish") {
        publishing {
            publications {
                maven(MavenPublication) {
                    pom {
                        name = project.group + ":" + project.name
                        url = 'https://github.com/chesapeaketechnology/BufMonkey'
                        description = "BufMonkey Artifacts"

                        scm {
                            connection = 'scm:git:https://github.com/chesapeaketechnology/BufMonkey.git'
                            developerConnection = 'scm:git:git@github.com:chesapeaketechnology/BufMonkey.git'
                            url = 'https://github.com/chesapeaketechnology/BufMonkey'
                        }

                        licenses {
                            license {
                                name = 'Apache 2.0'
                                url = 'https://opensource.org/licenses/Apache-2.0'
                            }
                        }

                        developers {
                            developer {
                                id = "ctic.us"
                                name = "CTI Developers"
                                email = "info@ctic-inc.com"
                                url = "https://github.com/chesapeaketechnology/BufMonkey"
                                organization = "Chesapeake Technology International"
                                organizationUrl = "https://ctic.us/"
                            }
                        }

                        withXml {
                            // This isn't any sort of Java archive artifact, and OSSRH doesn't enforce
                            // javadoc for 'pom' packages. 'exe' would be a more appropriate packaging
                            // value, but it isn't clear how that will be interpreted. In addition,
                            // 'pom' is typically the value used when building an exe with Maven.
                            asNode().project.packaging*.value = 'pom'
                        }
                    }
                }
            }

            repositories {
                maven {
                    if (rootProject.hasProperty('repositoryDir')) {
                        url = new File(rootProject.repositoryDir).toURI()
                    } else {
                        String stagingUrl
                        if (rootProject.hasProperty('repositoryId')) {
                            stagingUrl = 'https://oss.sonatype.org/service/local/staging/deployByRepositoryId/' +
                                    rootProject.repositoryId
                        } else {
                            stagingUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                        }
                        credentials {
                            if (rootProject.hasProperty('ossrhUsername') && rootProject.hasProperty('ossrhPassword')) {
                                username = rootProject.ossrhUsername
                                password = rootProject.ossrhPassword
                            }
                        }
                        def releaseUrl = stagingUrl
                        def snapshotUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
                        url = version.endsWith('SNAPSHOT') ? snapshotUrl : releaseUrl
                    }
                }
            }
        }

        signing {
            sign publishing.publications.maven
        }
    }
}
